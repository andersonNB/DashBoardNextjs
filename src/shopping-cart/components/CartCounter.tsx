'use client'
import React, { useState, useEffect } from 'react'
import { useAppSelector, useAppDispatch } from '@/store';
import { addOne, initCounterState, substractOne } from '@/store/counter/counterSlice';

interface Props {
    value?: number;
}
// Generated by https://quicktype.io
export interface CounterResponse {
    method: string;
    count: number;
}


const getApiCounter = async (): Promise<CounterResponse> => {
    //Vamos hacer el llamado de nuestra api
    const data = await fetch('/api/counter')
        .then(response => response.json());

    //o se puede colocar el tipo asÃ­ return data as CounterResponse;
    return data;
}

export const CartCounter = ({ value = 0 }: Props) => {


    const count = useAppSelector(state => state.counterReducer.count);
    const dispatch = useAppDispatch();


    // useEffect(() => {
    //     dispatch(initCounterState(value));
    // }, [dispatch, value])

    useEffect(() => {

        getApiCounter()
            .then((data) => dispatch(initCounterState(data.count)));

    }, [dispatch])




    const handleAdd = () => dispatch(addOne())

    const handleDecrease = () => dispatch(substractOne())

    return (
        <>
            <span className="text-9xl">{count}</span>
            <div className="flex">
                <button
                    onClick={handleAdd}
                    className="flex items-center justify-center p-2 rounded-xl bg-gray-900 text-white hover:bg-gray-600 transition-all w-[100px] mr-2">
                    +1
                </button>
                <button
                    onClick={handleDecrease}
                    className="flex items-center justify-center p-2 rounded-xl bg-gray-900 text-white hover:bg-gray-600 transition-all w-[100px] mr-2">
                    -1
                </button>
            </div>
        </>
    )
}
